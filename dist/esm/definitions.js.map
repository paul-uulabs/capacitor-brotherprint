{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import { PluginListenerHandle } from '@capacitor/core';\n\nexport interface BrotherPrintPlugin {\n  printImage(options: BrotherPrintOptions): Promise<{ value: boolean }>;\n  searchWiFiPrinter(): Promise<void>;\n  searchBLEPrinter(): Promise<void>;\n  retrieveBluetoothPrinter(): Promise<void>;\n\n  addListener(\n    eventName: 'onPrint',\n    listenerFunc: (info: { value: string }) => void,\n  ): PluginListenerHandle;\n\n  addListener(\n    eventName: 'onRetrieveBluetoothPrinter',\n    listenerFunc: (info: { serialNumberList: any[] }) => void,\n  ): PluginListenerHandle;\n\n  addListener(\n    eventName: 'onBLEAvailable',\n    listenerFunc: (info: { localNameList: any[] }) => void,\n  ): PluginListenerHandle;\n\n  addListener(\n    eventName: 'onIpAddressAvailable',\n    listenerFunc: (info: { ipAddressList: any[] }) => void,\n  ): PluginListenerHandle;\n\n  addListener(\n    eventName: 'onPrintFailedCommunication',\n    listenerFunc: (info: { value: string }) => void,\n  ): PluginListenerHandle;\n\n  addListener(\n    eventName: 'onPrintError',\n    listenerFunc: (info: { value: string }) => void,\n  ): PluginListenerHandle;\n}\n\nexport interface BrotherPrintOptions {\n  encodedImage: string;\n  printerType: string;\n  serialNumber: string;\n  numberOfCopies: number;\n  labelNameIndex: number;\n  ipAddress?: string;\n  localName?: string;\n}\n"]}